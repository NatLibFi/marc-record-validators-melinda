{
    "preprocessorDirectives" :
        [
            {
                "operation": "removeField",
                "comment": "Bunch of tags we always drop from the source (semantic reason; holdings data etc)",
                "comment2": "As per specs (except 852 was removed). Not sure whether this is a good idea.",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(066|841|842|843|844|845|86[3-8]|876|877|878|HLI)$"
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "comment": "MRA-763: remove various fields from a source prepublication if base record is good enough (ENNAKKOTIETO)",
                "fieldSpecification": {
                    "tagPattern": "^((?!CAT|LOW|SID|00[135678]|035|040|042|500|506|540|594|776|856|884|946|974).)*$",
                    "encodingLevel": ["8"]
                },
                "requireSourceField": {
                    "tag": "500",
                    "subfieldFilters": [{"code": "a", "valuePattern": "^(?:TARKISTETTU )?ENNAKKOTIETO"}]
                },
                "requireBaseField": {
                    "tag": "...",
                    "encodingLevel": [" ", "4", "5"]
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "comment": "MET-571: remove 594 $a EI VASTAANOTETTU from a source prepublication if base record is good enough",
                "fieldSpecification": {
                    "tagPattern": "^594$",
                    "encodingLevel": ["8"],
                    "subfieldFilters": [
                        {"code": "a", "value": "EI VASTAANOTETTU"},
                        {"code": "5", "value": "FENNI"}
                    ]
                },
                "requireBaseField": {
                    "tag": "LOW",
                    "subfieldFilters": [
                        {"code": "a", "valuePattern": "^(?:FENNI|FIKKA)$"}
                    ],
                    "encodingLevel": [" ", "1", "2", "3", "4", "5", "7"]
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "comment": "MRA-763: remove various fields from a source prepublication if base record is good enough (Koneellisesti tuotettu tietue)",
                "fieldSpecification": {
                    "tagPattern": "^((?!CAT|LOW|SID|00[135678]|035|040|042|500|506|540|594|776|856|884|946|974).)*$",
                    "encodingLevel": ["2", "8"]
                },
                "requireSourceField": {
                    "tag": "500",
                    "subfieldFilters": [{"code": "a", "valuePattern": "^Koneellisesti tuotettu tietue"}]
                },
                "requireBaseField": {
                    "tagPattern": "...",
                    "encodingLevel": [" ", "4", "5"]
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "comment": "Remove 65X $g ENNAKKOTIETO fields from source if base has 65X without a $g ENNAKKOTIETO",
                "fieldSpecification": {
                    "tagPattern": "^(648|650|651|653|655)$",
                    "subfieldFilters": [{"code": "g", "value": "ENNAKKOTIETO"}]
                },
                "requireBaseField": {
                    "tagPattern": "^(648|650|651|655)$",
                    "subfieldFilters": [{"missingCode": "g"}]
                }
            },



            {
                "operation": "removeSubfield",
                "comment": "Remove X00$d with old and deprecated (1) style value. (1) ... (99) are removed.",
                "recordType": "both",
                "fieldSpecification": {
                    "tagPattern": "^[1678]00$",
                    "subfieldFilters": [{"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$"}]
                },
                "deletableSubfieldFilter": {"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$" }
            },

            {
                "operation": "removeSubfield",
                "comment": "remove price information",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(?:020|024?)$",
                    "subfieldFilters": [{"code": "c"}]
                },
                "deletableSubfieldFilter": {"code": "c"}
            },

            {
                "operation": "removeSubfield",
                "comment": "based on https://www.kiwi.fi/display/kumea/2023-05-03#id-20230503-2)Kysymys:Kysymys040%E2%80%A1aISIL-tunnuksista",
                "recordType": "source",
                "encodingLevel": ["8"],
                "fieldSpecification": {
                    "tag": "040",
                    "subfieldFilters": [{
                        "code": "a",
                        "value": "FI-KV"
                    }]
                },
                "deletableSubfieldFilter": {"code": "a", "value": "FI-KV"}
            },
            {
                "operation": "renameSubfield",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "040",
                    "subfieldFilters": [{"code": "a"}]
                },
                "renamableSubfieldFilter": {"code": "a", "newCode": "d"}
            },

            {
                "operation": "removeSubfield",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041",
                    "subfieldFilters": [{
                        "code": "a",
                        "value": "zxx"
                    }]
                },
                "deletableSubfieldFilter": {"code": "a", "value": "zxx"}
            },
            {
                "operation": "removeSubfield",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041",
                    "subfieldFilters": [{
                        "code": "d",
                        "value": "zxx"
                    }]
                },
                "deletableSubfieldFilter": {"code": "d", "value": "zxx"}
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(?:648|650|651|655)$",
                    "subfieldFilters": [{
                        "code": "2",
                        "valuePattern": "^(allars|cilla|musa|ysa)$"
                    }]
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "830",
                    "subfieldFilters": [{"missingCode": "x"}]
                },
                "comment": "NB! Domain-specific. As in specs."
            }

        ],
    "mergeConfiguration" :
    {
        "comment #1" : "Meaningless indicators (=indicators having but one legal value) are derived from melindaCustomMergeFields.",
        "comment #2" : "Meaningless indicators and non-filing indicators never prevent merge. (Hard-coded in mergableIndicator.js)",
        "comment #3" : "When merging, indicator preference defaults are defined in mergeIndicators.js. However, these can be overridden here.",
        "indicator1PreferredValues": {
            "022" : {"0": 1, "1": 1, " ": 2},
            "041" : {"0": 1, "1": 1, " ": 2},
            "246" : {"0": 1, "1": 1, "2": 1, "3": 1, " ": 2},
            "341" : {"0": 1, "1": 1, " ": 2},
            "363" : {"0": 1, "1": 1, " ": 2},
            "382" : {"0": 1, "1": 1, "2": 1, "3": 1, " ": 2},
            "384" : {"0": 1, "1": 1, " ": 2},
            "388" : {"0": 1, "1": 1, " ": 2},
            "490" : [ "1", "0" ],
            "505" : [ "8", "0", "2", "1" ],
            "506" : {"0": 1, "1": 1, " ": 2},
            "541" : {"0": 1, "1": 1, " ": 2},
            "542" : {"0": 1, "1": 1, " ": 2},
            "544" : {"0": 1, "1": 1, " ": 2},
            "545" : {"0": 1, "1": 1, " ": 2},
            "561" : {"0": 1, "1": 1, " ": 2},
            "583" : {"0": 1, "1": 1, " ": 2},
            "588" : {"0": 1, "1": 1, " ": 2},
            "650" : [ " ", "1", "2", "0" ]
        },
        "indicator2PreferredValues": {
            "024" : {"0": 1, "1": 1, " ": 2},
            "033" : {"0": 1, "1": 1, "2": 1, " ": 2},
            "246" : {"0": 1, "1": 1, "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, " ": 2},
            "363" : {"0": 1, "1": 1, " ": 2},
            "382" : {"0": 1, "1": 1, " ": 2},
            "730" : [ "2", " " ]
        },
        "comment #4" : "List indicators that don't block merge here. Non-filing indicators do not prevent field merge (their support is hard-coded). They are mainly listed here as an example.",
        "ignoreIndicator1" : ["100", "110", "111", "130",
            "210", "242", "245", "246", "247", "307", "490",
            "505", "506", "510", "511", "516", "520", "521", "522", "524", "526", "583", "586",
            "600", "610", "630", "650", "651", "655",
            "700", "710", "730", "740", "760", "762", "765", "767", "770", "772", "773", "774", "775", "776",
            "777", "780", "785", "786", "787", "788", "800", "810"],
        "ignoreIndicator2" : ["017", "222", "240", "242", "243", "245",
            "760", "762", "765", "767", "770", "773", "774", "775", "776", "777", "786", "787", "788", "830"],
        "comment #5" : "If one indicator has value, and the other has not, it does not necessarily mean mismatch",
        "tolerateBlankIndicator1": ["022", "037", "041", "046", "050", "055", "060", "070", "080",
            "246", "260", "264",
            "341", "363", "382", "384", "388",
            "541", "542", "544", "545", "561", "583", "588", "856"],
        "tolerateBlankIndicator2": ["024", "033", "082", "246", "363", "382", "856" ],
        "preprocessorDirectives" : [
            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "100"},
                "comment": "NB! Retags should check corresponding 880 fields as well.",
                "newTag": "700"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "110"},
                "newTag": "710"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "111"},
                "newTag": "711"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "130"},
                "newTag": "730"
            }
        ]
    },

    "addConfiguration" : {
        "preprocessorDirectives" : [
            {
                "operation": "removeField",
                "comment": "this should be done after field merge and before copy (could be merged, but not added)",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "240"
                },
                "requireBaseField": {
                    "tagPattern": "^(130|240)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source 041 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041"
                },
                "requireBaseField": {
                    "tag": "041"
                }
            },

            {
                "operation": "removeField",
                "comment": "Never add 250; as per MET-193 (different 250) and MET-194 (base without 250) related discussion with MH)",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "250"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 260 so that a repeatable field won't be copied from source if base already has 260/264 field",
                "recordType": "source",
                "fieldSpecification": { "tag": "260" },
                "requireBaseField": { "tagPattern": "^26[04]$" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 260-XX (see above rule for raison d'etrê",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^260-"}]
                },
                "requireBaseField": { "tagPattern": "^26[04]$" }
            },


            {
                "operation": "removeField",
                "comment": "Remove 264 so that a repeatable field won't be copied from source if base already has a 260 field",
                "comment2": "Here we lose information, but can't add a 264 if there's a 260",
                "recordType": "source",
                "fieldSpecification": { "tag": "264" },
                "requireBaseField": { "tagPattern": "^260$" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX (see above rule for raison r'etre)",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": { "tagPattern": "^260$" }
            },

            {
                "operation": "removeField",
                "comment": "Remove 264 ind2=0 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "264",
                    "ind2": "0"
                },
                "requireBaseField": {
                    "tagPattern": "^(264)$",
                    "ind2": "0"
                }
            },


            {
                "operation": "removeField",
                "comment": "Remove source 264 ind2=0 if base has one, so that a repeatable field won't be copied from source",
                "recordType": "source",
                "fieldSpecification": { "tag": "264", "ind2": "0" },
                "requireBaseField": { "tag": "264", "ind2": "0" }
            },

            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX ind2=0 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "ind2": "0",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": {
                    "tagPattern": "^264$",
                    "ind2": "0"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source 264 ind2=1 if base has one, so that a repeatable field won't be copied from source",
                "recordType": "source",
                "fieldSpecification": { "tag": "264", "ind2": "1" },
                "requireBaseField": { "tag": "264", "ind2": "1" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX ind2=1 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "ind2": "1",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": {
                    "tagPattern": "^264$",
                    "ind2": "1"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source 264 ind2=2 if base has one, so that a repeatable field won't be copied from source",
                "recordType": "source",
                "fieldSpecification": { "tag": "264", "ind2": "2" },
                "requireBaseField": { "tag": "264", "ind2": "2" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX ind2=2 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "ind2": "2",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": {
                    "tagPattern": "^264$",
                    "ind2": "2"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source 264 ind2=3 if base has one, so that a repeatable field won't be copied from source",
                "recordType": "source",
                "fieldSpecification": { "tag": "264", "ind2": "3" },
                "requireBaseField": { "tag": "264", "ind2": "3" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX ind2=3 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "ind2": "3",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": {
                    "tagPattern": "^264$",
                    "ind2": "3"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source 264 ind2=4 if base has one, so that a repeatable field won't be copied from source",
                "recordType": "source",
                "fieldSpecification": { "tag": "264", "ind2": "4" },
                "requireBaseField": { "tag": "264", "ind2": "4" }
            },
            {
                "operation": "removeField",
                "comment": "Remove 880 $6 264-XX ind2=4 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "880",
                    "ind2": "4",
                    "subfieldFilters": [{"code": "6", "valuePattern": "^264-"}]
                },
                "requireBaseField": {
                    "tagPattern": "^264$",
                    "ind2": "4"
                }
            },


            {
                "operation": "removeField",
                "comment": "Remove 300 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "300"
                },
                "requireBaseField": {
                    "tagPattern": "^(300)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 310 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "310"
                },
                "requireBaseField": {
                    "tagPattern": "^(310)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 321 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "321"
                },
                "requireBaseField": {
                    "tagPattern": "^(321)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 335 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "335"
                },
                "requireBaseField": {
                    "tagPattern": "^(335)$"
                }
            },



            {
                "operation": "removeField",
                "comment": "Remove 336 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "336"
                },
                "requireBaseField": {
                    "tagPattern": "^(336)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 337 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "337"
                },
                "requireBaseField": {
                    "tagPattern": "^(337)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 338 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "338"
                },
                "requireBaseField": {
                    "tagPattern": "^(338)$"
                }
            }

        ]
    },
    "postprocessorDirectives" :
        [

        ]

}